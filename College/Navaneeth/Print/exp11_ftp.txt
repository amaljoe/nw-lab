//EXP 11: Concurrent FTP Communication Using TCP
//Navaneeth Venu 44 S6CS2 MBT19CS084

CLIENT 1:

//ftp_client1

#include <stdio.h>
#include <string.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>

void main()
{
	printf("FTP: Client Program 1\n");
	char buffer[500] = "";
	char fileName[40];
	
	do{
		//CREATE SOCKET
		int sskt = socket(AF_INET, SOCK_STREAM, 0);
	
		struct sockaddr_in addr1;
		
		//CREATE LOCAL ADDRESS
		addr1.sin_family = AF_INET;
		addr1.sin_port =  3000;
		addr1.sin_addr.s_addr = INADDR_ANY;
		
		//CONNECT TO SOCKET AND CHECK ERRORS
		int errno = connect(sskt,(struct sockaddr *) &addr1, sizeof(addr1));
		if(errno == -1)
		{
			perror("ERROR");
			return;
		}
		
		
		printf("\nEnter filename:");
		scanf("%s", fileName);
		
		//SEND FILENAME TO SERVER
		send(sskt, fileName, sizeof(fileName), 0);
		
		recv(sskt, buffer, sizeof(buffer), 0);
		printf("Server Response:\n%s", buffer);
		
		if(strcmp(buffer,"File Doesn't Exist") != 0)
		{
			char writeFilePath[100] = "client1/";
			strcat(writeFilePath,fileName);
			printf("\nWriting response to file: %s", writeFilePath);
			FILE *f = fopen(writeFilePath,"w");
			fprintf(f,"%s",buffer);
			fclose(f);
		}
		
		printf("\n");
		close(sskt);
	}while(strcmp(buffer,"stop"));
}

CLIENT 2:

//ftp_client2

#include <stdio.h>
#include <string.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>

void main()
{
	printf("FTP: Client Program 2\n");
	char buffer[500] = "";
	char fileName[40];
	
	do{
		//CREATE SOCKET
		int sskt = socket(AF_INET, SOCK_STREAM, 0);
	
		struct sockaddr_in addr1;
		
		//CREATE LOCAL ADDRESS
		addr1.sin_family = AF_INET;
		addr1.sin_port =  3000;
		addr1.sin_addr.s_addr = INADDR_ANY;
		
		//CONNECT TO SOCKET AND CHECK ERRORS
		int errno = connect(sskt,(struct sockaddr *) &addr1, sizeof(addr1));
		if(errno == -1)
		{
			perror("ERROR");
			return;
		}
		
		
		printf("\nEnter filename:");
		scanf("%s", fileName);
		
		//SEND FILENAME TO SERVER
		send(sskt, fileName, sizeof(fileName), 0);
		
		recv(sskt, buffer, sizeof(buffer), 0);
		printf("Server Response:\n%s", buffer);
		
		if(strcmp(buffer,"File Doesn't Exist") != 0)
		{
			char writeFilePath[100] = "client2/";
			strcat(writeFilePath,fileName);
			printf("\nWriting response to file: %s", writeFilePath);
			FILE *f = fopen(writeFilePath,"w");
			fprintf(f,"%s",buffer);
			fclose(f);
		}
		
		printf("\n");
		close(sskt);
	}while(strcmp(buffer,"stop"));
}

//SERVER:

//ftp_server

#include <stdio.h>
#include <string.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>

void main()
{
	printf("FTP: Server Program\n\n");
	char buffer[500] = "";
	int sskt = socket(AF_INET, SOCK_STREAM, 0);
	
	struct sockaddr_in addr1, addr2;
	int addr2_size = sizeof(addr2);
	
	addr1.sin_family = AF_INET;
	addr1.sin_port =  3000;
	addr1.sin_addr.s_addr = INADDR_ANY;
	
	bind(sskt,(struct sockaddr *) &addr1, sizeof(addr1));
	listen(sskt, 10);
	
	do{
		//ACCEPT REQUEST
		int cskt = accept(sskt, (struct sockaddr *) &addr2, (&addr2_size));
		//RECEIVE CONTENTS IN BUFFER
		recv(cskt, buffer, sizeof(buffer) , 0);
		
		printf("Client Request: %s\n", buffer);
		
		pid_t id = fork();
		
		//CHILD PROCESS
		if(id == 0)
		{
			if(strcmp(buffer,"stop") == 0)
				break;

			FILE *f = fopen(buffer,"r");
			if(f == NULL)
				send(cskt, "File Doesn't Exist", sizeof(buffer) , 0);
			else
			{
				fscanf(f, "%[^EOF]%*c", buffer);//SCAN WITH SPACES
				send(cskt, buffer, sizeof(buffer) , 0);
			}
			
			fclose(f);
			close(cskt);		
			break;
		}
		
		//FORK FAILED
		else if(id < 0)
		{
			printf("Fork Failed\n");
		}
		
		close(cskt);
		
	}while(strcmp(buffer,"stop"));
	
	close(sskt);
	
}

OUTPUT:


//CLIENT1:

FTP: Client Program 1

Enter filename:hello.txt
Server Response:
File Doesn't Exist

Enter filename:dns.txt
Server Response:
www.google.com	196.178.3.45
www.facebook.com	167.53.45.12
www.gmail.com	120.52.88.12

Writing response to file: client1/dns.txt


//CLIENT 2:

FTP: Client Program 2

Enter filename:hi.txt
Server Response:
File Doesn't Exist

Enter filename:dns.txt
Server Response:
www.google.com	196.178.3.45
www.facebook.com	167.53.45.12
www.gmail.com	120.52.88.12

Writing response to file: client2/dns.txt

//SERVER:

FTP: Server Program

Client Request: hello.txt
Client Request: hi.txt
Client Request: dns.txt
Client Request: dns.txt

